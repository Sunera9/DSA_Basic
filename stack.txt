package Stack;

public class Stack {
  private int top;
  private int maxSize;
  private char[] stackArray;
  
  public Stack(int maxSize) {
	  this.top = -1;
	  this.stackArray= new char[maxSize];
	  this.maxSize = maxSize;
  }
  
  public boolean isEmpty() {
	  
	return (top == -1);
	  
  }
  public boolean isFull() { 
	   return (top ==(maxSize -1));
  }
  
  //Push Method - insert
  public void push (char ch) {
	  if(!isFull()) {
		stackArray[++top] =ch ;
		  
	  }
	  else {
		  System.out.println("Stack Is Full");
	  }
  }
  // Pop method - Delete 
  public char pop() 
  {
	 if(!isEmpty()) {
		 
		 return stackArray[top--];
		 
				 
	 }
	 else {
		 System.out.println("Stack is Empty");
		 
	 }
	 return 0;
	  
  }
  
  //  peak method - top element 
  public char peek() {
	  if(!isEmpty()) {
		  return stackArray [top];
	  }else{
		  
		  System.out.println("Stack Is Empty");
	  }
	  return  0;
  }
  //Print the stack element 
  public void display() {
	  System.out.println("Printing the stack element ");
	  int i = top;
	  do {
		  System.out.println(stackArray[i]+"");
		  i--;
	  }
	  while (i>=0);
  }
}
